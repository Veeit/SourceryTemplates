{"version":3,"instance":"eyJpZCI6IkE4QUM3QUMxLUE1NTItNEM2MC05OTkyLTEyMzhFRDYyRDEwMiIsImRlc2NyaXB0aW9uIjoiIiwiY29udGVudCI6IlwvXC8gc3dpZnRsaW50OmRpc2FibGUgbGluZV9sZW5ndGhcblwvXC8gc3dpZnRsaW50OmRpc2FibGUgdmFyaWFibGVfbmFtZVxuXG5pbXBvcnQgRm91bmRhdGlvblxuI2lmIG9zKGlPUykgfHwgb3ModHZPUykgfHwgb3Mod2F0Y2hPUylcbmltcG9ydCBVSUtpdFxuaW1wb3J0IENvbWJpbmVcbiNlbHNlaWYgb3MoT1NYKVxuaW1wb3J0IEFwcEtpdFxuI2VuZGlmXG5cbnslc2V0IGdlbmVyaWNUeXBlcyAlfXslZW5kc2V0JX1cblxueyUgZm9yIGltcG9ydCBpbiBhcmd1bWVudC5hdXRvTW9ja2FibGVJbXBvcnRzICV9XG5pbXBvcnQge3sgaW1wb3J0IH19XG57JSBlbmRmb3IgJX1cblxueyUgZm9yIGltcG9ydCBpbiBhcmd1bWVudC5hdXRvTW9ja2FibGVUZXN0YWJsZUltcG9ydHMgJX1cbkB0ZXN0YWJsZSBpbXBvcnQge3sgaW1wb3J0IH19XG57JSBlbmRmb3IgJX1cblxueyUgbWFjcm8gc3dpZnRpZnlNZXRob2ROYW1lIG5hbWUgJX17eyBuYW1lIHwgcmVwbGFjZTpcIihcIixcIl9cIiB8IHJlcGxhY2U6XCIpXCIsXCJcIiB8IHJlcGxhY2U6XCI6XCIsXCJfXCIgfCByZXBsYWNlOlwiYFwiLFwiXCIgfCBzbmFrZVRvQ2FtZWxDYXNlIHwgbG93ZXJGaXJzdFdvcmQgfX17JSBlbmRtYWNybyAlfVxuXG57JSBtYWNybyBhY2Nlc3NMZXZlbCBsZXZlbCAlfXslIGlmIGxldmVsICE9ICdpbnRlcm5hbCcgJX17eyBsZXZlbCB9fSB7JSBlbmRpZiAlfXslIGVuZG1hY3JvICV9XG5cbnslIG1hY3JvIHN0YXRpY1NwZWNpZmllciBtZXRob2QgJX17JSBpZiBtZXRob2QuaXNTdGF0aWMgYW5kIG5vdCBtZXRob2QuaXNJbml0aWFsaXplciAlfXN0YXRpYyB7JSBlbmRpZiAlfXslIGVuZG1hY3JvICV9XG5cbnslIG1hY3JvIG1ldGhvZFRocm93YWJsZUVycm9yRGVjbGFyYXRpb24gbWV0aG9kICV9XG4gICAgeyUgY2FsbCBhY2Nlc3NMZXZlbCBtZXRob2QuYWNjZXNzTGV2ZWwgJX17JSBjYWxsIHN0YXRpY1NwZWNpZmllciBtZXRob2QgJX12YXIgeyUgY2FsbCBzd2lmdGlmeU1ldGhvZE5hbWUgbWV0aG9kLnNlbGVjdG9yTmFtZSAlfVRocm93YWJsZUVycm9yOiBFcnJvcj9cbnslIGVuZG1hY3JvICV9XG5cbnslIG1hY3JvIG1ldGhvZFRocm93YWJsZUVycm9yVXNhZ2UgbWV0aG9kICV9XG4gICAgICAgIGlmIGxldCBlcnJvciA9IHslIGNhbGwgc3dpZnRpZnlNZXRob2ROYW1lIG1ldGhvZC5zZWxlY3Rvck5hbWUgJX1UaHJvd2FibGVFcnJvciB7XG4gICAgICAgICAgICB0aHJvdyBlcnJvclxuICAgICAgICB9XG57JSBlbmRtYWNybyAlfVxuXG57JSBtYWNybyBtZXRob2RSZWNlaXZlZFBhcmFtZXRlcnMgbWV0aG9kICV9XG4gICAgeyUgc2V0IGhhc05vbkVzY2FwaW5nQ2xvc3VyZXMgJX1cbiAgICAgICAgeyUtIGZvciBwYXJhbSBpbiBtZXRob2QucGFyYW1ldGVycyB3aGVyZSBwYXJhbS5pc0Nsb3N1cmUgYW5kIG5vdCBwYXJhbS50eXBlQXR0cmlidXRlcy5lc2NhcGluZyAlfVxuICAgICAgICAgICAge3sgdHJ1ZSB9fVxuICAgICAgICB7JSBlbmRmb3IgLSV9XG4gICAgeyUgZW5kc2V0ICV9XG4gICAgeyUgaWYgbWV0aG9kLnBhcmFtZXRlcnMuY291bnQgPT0gMSBhbmQgbm90IGhhc05vbkVzY2FwaW5nQ2xvc3VyZXMgJX1cbiAgICAgICAgeyUgY2FsbCBzd2lmdGlmeU1ldGhvZE5hbWUgbWV0aG9kLnNlbGVjdG9yTmFtZSAlfVJlY2VpdmVkeyUgZm9yIHBhcmFtIGluIG1ldGhvZC5wYXJhbWV0ZXJzICV9e3sgcGFyYW0ubmFtZXx1cHBlckZpcnN0TGV0dGVyIH19ID0ge3sgcGFyYW0ubmFtZSB9fXslIGVuZGZvciAlfVxuICAgICAgICB7JSBjYWxsIHN3aWZ0aWZ5TWV0aG9kTmFtZSBtZXRob2Quc2VsZWN0b3JOYW1lICV9UmVjZWl2ZWRJbnZvY2F0aW9ucy5hcHBlbmQoeyUgZm9yIHBhcmFtIGluIG1ldGhvZC5wYXJhbWV0ZXJzICV9e3sgcGFyYW0ubmFtZSB9fSl7JSBlbmRmb3IgJX1cbiAgICB7JSBlbHNlICV9XG4gICAgeyUgaWYgbm90IG1ldGhvZC5wYXJhbWV0ZXJzLmNvdW50ID09IDAgYW5kIG5vdCBoYXNOb25Fc2NhcGluZ0Nsb3N1cmVzICV9XG4gICAgICAgIHslIGNhbGwgc3dpZnRpZnlNZXRob2ROYW1lIG1ldGhvZC5zZWxlY3Rvck5hbWUgJX1SZWNlaXZlZEFyZ3VtZW50cyA9ICh7JSBmb3IgcGFyYW0gaW4gbWV0aG9kLnBhcmFtZXRlcnMgJX17eyBwYXJhbS5uYW1lIH19OiB7eyBwYXJhbS5uYW1lIH19eyUgaWYgbm90IGZvcmxvb3AubGFzdCV9LCB7JSBlbmRpZiAlfXslIGVuZGZvciAlfSlcbiAgICAgICAgeyUgY2FsbCBzd2lmdGlmeU1ldGhvZE5hbWUgbWV0aG9kLnNlbGVjdG9yTmFtZSAlfVJlY2VpdmVkSW52b2NhdGlvbnMuYXBwZW5kKCh7JSBmb3IgcGFyYW0gaW4gbWV0aG9kLnBhcmFtZXRlcnMgJX17eyBwYXJhbS5uYW1lIH19OiB7eyBwYXJhbS5uYW1lIH19eyUgaWYgbm90IGZvcmxvb3AubGFzdCV9LCB7JSBlbmRpZiAlfXslIGVuZGZvciAlfSkpXG4gICAgeyUgZW5kaWYgJX1cbiAgICB7JSBlbmRpZiAlfVxueyUgZW5kbWFjcm8gJX1cblxueyUgbWFjcm8gbWV0aG9kQ2xvc3VyZU5hbWUgbWV0aG9kICV9eyUgY2FsbCBzd2lmdGlmeU1ldGhvZE5hbWUgbWV0aG9kLnNlbGVjdG9yTmFtZSAlfUNsb3N1cmV7JSBlbmRtYWNybyAlfVxuXG57JSBtYWNybyBjbG9zdXJlUmV0dXJuVHlwZU5hbWUgbWV0aG9kICV9eyUgaWYgbWV0aG9kLmlzT3B0aW9uYWxSZXR1cm5UeXBlICV9e3sgbWV0aG9kLnVud3JhcHBlZFJldHVyblR5cGVOYW1lIH19P3slIGVsc2UgJX17eyBtZXRob2QucmV0dXJuVHlwZU5hbWUgfX17JSBlbmRpZiAlfXslIGVuZG1hY3JvICV9XG5cbnslIG1hY3JvIG1ldGhvZENsb3N1cmVEZWNsYXJhdGlvbiBtZXRob2QgJX1cbiAgICB7JSBjYWxsIGFjY2Vzc0xldmVsIG1ldGhvZC5hY2Nlc3NMZXZlbCAlfXslIGNhbGwgc3RhdGljU3BlY2lmaWVyIG1ldGhvZCAlfXZhciB7JSBjYWxsIG1ldGhvZENsb3N1cmVOYW1lIG1ldGhvZCAlfTogKCh7JSBmb3IgcGFyYW0gaW4gbWV0aG9kLnBhcmFtZXRlcnMgJX17JSBpZiBwYXJhbS5hbm5vdGF0aW9ucy5vdmVycmlkZSAlfXslaWYgcGFyYW0udHlwZUF0dHJpYnV0ZXMuZXNjYXBpbmcgJX1AZXNjYXBpbmcgeyVlbmRpZiV9e3twYXJhbS5hbm5vdGF0aW9ucy5vdmVycmlkZX19eyVlbHNlJX17JSBjYWxsIGV4aXN0ZW50aWFsQ2xvc3VyZVZhcmlhYmxlVHlwZU5hbWUgcGFyYW0udHlwZU5hbWUgJX17JWVuZGlmJX17JSBpZiBub3QgZm9ybG9vcC5sYXN0ICV9LCB7JSBlbmRpZiAlfXslIGVuZGZvciAlfSkgeyUgaWYgbWV0aG9kLmlzQXN5bmMgJX1hc3luYyB7JSBlbmRpZiAlfXslIGlmIG1ldGhvZC50aHJvd3MgJX10aHJvd3MgeyUgZW5kaWYgJX0tPiB7JSBpZiBtZXRob2QuaXNJbml0aWFsaXplciAlfVZvaWR7JSBlbHNlICV9eyVpZiBtZXRob2QuYW5ub3RhdGlvbnMub3ZlcnJpZGVSZXR1cm4gJX17e21ldGhvZC5hbm5vdGF0aW9ucy5vdmVycmlkZVJldHVybn19eyUgZWxzZSAlfSB7JSBjYWxsIGV4aXN0ZW50aWFsVmFyaWFibGVUeXBlTmFtZSBtZXRob2QucmV0dXJuVHlwZU5hbWUgJX0geyUgZW5kaWYgJX17JSBlbmRpZiAlfSk\/XG57JSBlbmRtYWNybyAlfVxuXG57JSBtYWNybyBtZXRob2RDbG9zdXJlQ2FsbFBhcmFtZXRlcnMgbWV0aG9kICV9eyUgZm9yIHBhcmFtIGluIG1ldGhvZC5wYXJhbWV0ZXJzICV9e3sgcGFyYW0ubmFtZSB9fXslIGlmIG5vdCBmb3Jsb29wLmxhc3QgJX0sIHslIGVuZGlmICV9eyUgZW5kZm9yICV9eyUgZW5kbWFjcm8gJX1cblxueyUgbWFjcm8gbW9ja01ldGhvZCBtZXRob2QgJX1cbiAgICBcL1wvTUFSSzogLSB7eyBtZXRob2Quc2hvcnROYW1lIH19XG5cbiAgICB7JWlmIG1ldGhvZC5zaG9ydE5hbWUgfCBjb250YWluczpcIjxcIiBhbmQgbWV0aG9kLnNob3J0TmFtZSB8IGNvbnRhaW5zOlwiPlwiICV9XG4gICAgXC9cL1wvOkdlbmVyaWNzIG5vdCBwZXJmZXJjdGx5IHN1cHBvcnRlZCEgXG4gICAgeyMgZm9yIGJldHRlciBkZWJ1Z2dpbmcgb2YgYW5vdGF0aW9uc1xuICAgIHslIGNhbGwgYWNjZXNzTGV2ZWwgbWV0aG9kLmFjY2Vzc0xldmVsICV9eyUgY2FsbCBzdGF0aWNTcGVjaWZpZXIgbWV0aG9kICV9dmFyIHslIGNhbGwgc3dpZnRpZnlNZXRob2ROYW1lIG1ldGhvZC5zZWxlY3Rvck5hbWUgJX1cbiAgICBSZWNlaXZlZEludm9jYXRpb25zXG4gICAgeyUgZm9yIHBhcmFtIGluIG1ldGhvZC5wYXJhbWV0ZXJzICV9OiBcbiAgICAgICAgW3t7ICcoJyBpZiBwYXJhbS5pc0Nsb3N1cmUgfX0oXG4gICAgICAgIHslaWYgcGFyYW0uYW5ub3RhdGlvbnMub3ZlcnJpZGUgJX1cbiAgICAgICAge3twYXJhbS5hbm5vdGF0aW9ucy5vdmVycmlkZX19IFxuICAgICAgICB7JWVsc2UlfVxuICAgICAgICB7JSBjYWxsIGV4aXN0ZW50aWFsQ2xvc3VyZVZhcmlhYmxlVHlwZU5hbWUgcGFyYW0udHlwZU5hbWUudW53cmFwcGVkVHlwZU5hbWUgJX1cbiAgICAgICAgeyVlbmRpZiV9XG4gICAgICAgICl7eyAnKScgaWYgcGFyYW0uaXNDbG9zdXJlIH19XG4gICAgICAgIHslaWYgcGFyYW0udHlwZU5hbWUuaXNPcHRpb25hbCV9P3slZW5kaWYlfV1cbiAgICB7JSBlbmRmb3IgJX0gPSBbXSAgIFxuICAgIHt7bWV0aG9kfX1cbiAgICAjfVxuICAgIFxuICAgIFxuICAgIHslIGVuZGlmICV9XG4gICAgeyUgaWYgbWV0aG9kLnRocm93cyAlfVxuICAgICAgICB7JSBjYWxsIG1ldGhvZFRocm93YWJsZUVycm9yRGVjbGFyYXRpb24gbWV0aG9kICV9XG4gICAgeyUgZW5kaWYgJX1cbiAgICB7JSBpZiBub3QgbWV0aG9kLmlzSW5pdGlhbGl6ZXIgJX1cbiAgICB7JSBjYWxsIGFjY2Vzc0xldmVsIG1ldGhvZC5hY2Nlc3NMZXZlbCAlfXslIGNhbGwgc3RhdGljU3BlY2lmaWVyIG1ldGhvZCAlfXZhciB7JSBjYWxsIHN3aWZ0aWZ5TWV0aG9kTmFtZSBtZXRob2Quc2VsZWN0b3JOYW1lICV9Q2FsbHNDb3VudCA9IDBcbiAgICB7JSBjYWxsIGFjY2Vzc0xldmVsIG1ldGhvZC5hY2Nlc3NMZXZlbCAlfXslIGNhbGwgc3RhdGljU3BlY2lmaWVyIG1ldGhvZCAlfXZhciB7JSBjYWxsIHN3aWZ0aWZ5TWV0aG9kTmFtZSBtZXRob2Quc2VsZWN0b3JOYW1lICV9Q2FsbGVkOiBCb29sIHtcbiAgICAgICAgcmV0dXJuIHslIGNhbGwgc3dpZnRpZnlNZXRob2ROYW1lIG1ldGhvZC5zZWxlY3Rvck5hbWUgJX1DYWxsc0NvdW50ID4gMFxuICAgIH1cbiAgICB7JSBlbmRpZiAlfVxuICAgIHslIHNldCBoYXNOb25Fc2NhcGluZ0Nsb3N1cmVzICV9XG4gICAgICAgIHslLSBmb3IgcGFyYW0gaW4gbWV0aG9kLnBhcmFtZXRlcnMgd2hlcmUgcGFyYW0uaXNDbG9zdXJlIGFuZCBub3QgcGFyYW0udHlwZUF0dHJpYnV0ZXMuZXNjYXBpbmcgJX1cbiAgICAgICAgICAgIHt7IHRydWUgfX1cbiAgICAgICAgeyUgZW5kZm9yIC0lfVxuICAgIHslIGVuZHNldCAlfVxuICAgIHslIGlmIG1ldGhvZC5wYXJhbWV0ZXJzLmNvdW50ID09IDEgYW5kIG5vdCBoYXNOb25Fc2NhcGluZ0Nsb3N1cmVzICV9XG4gICAgeyUgY2FsbCBhY2Nlc3NMZXZlbCBtZXRob2QuYWNjZXNzTGV2ZWwgJX17JSBjYWxsIHN0YXRpY1NwZWNpZmllciBtZXRob2QgJX12YXIgeyUgY2FsbCBzd2lmdGlmeU1ldGhvZE5hbWUgbWV0aG9kLnNlbGVjdG9yTmFtZSAlfVJlY2VpdmVkeyUgZm9yIHBhcmFtIGluIG1ldGhvZC5wYXJhbWV0ZXJzICV9e3sgcGFyYW0ubmFtZXx1cHBlckZpcnN0TGV0dGVyIH19OiB7eyAnKCcgaWYgcGFyYW0uaXNDbG9zdXJlIH19eyVpZiBwYXJhbS5hbm5vdGF0aW9ucy5vdmVycmlkZSAlfXt7cGFyYW0uYW5ub3RhdGlvbnMub3ZlcnJpZGV9fXslZWxzZSV9eyUgY2FsbCBleGlzdGVudGlhbENsb3N1cmVWYXJpYWJsZVR5cGVOYW1lIHBhcmFtLnR5cGVOYW1lLnVud3JhcHBlZFR5cGVOYW1lICV9eyVlbmRpZiV9e3sgJyknIGlmIHBhcmFtLmlzQ2xvc3VyZSB9fT97JSBlbmRmb3IgJX1cbiAgICB7JSBjYWxsIGFjY2Vzc0xldmVsIG1ldGhvZC5hY2Nlc3NMZXZlbCAlfXslIGNhbGwgc3RhdGljU3BlY2lmaWVyIG1ldGhvZCAlfXZhciB7JSBjYWxsIHN3aWZ0aWZ5TWV0aG9kTmFtZSBtZXRob2Quc2VsZWN0b3JOYW1lICV9UmVjZWl2ZWRJbnZvY2F0aW9uc3slIGZvciBwYXJhbSBpbiBtZXRob2QucGFyYW1ldGVycyAlfTogW3t7ICcoJyBpZiBwYXJhbS5pc0Nsb3N1cmUgfX17JWlmIHBhcmFtLmFubm90YXRpb25zLm92ZXJyaWRlICV9e3twYXJhbS5hbm5vdGF0aW9ucy5vdmVycmlkZX19eyVlbHNlJX17JSBjYWxsIGV4aXN0ZW50aWFsQ2xvc3VyZVZhcmlhYmxlVHlwZU5hbWUgcGFyYW0udHlwZU5hbWUudW53cmFwcGVkVHlwZU5hbWUgJX17JWVuZGlmJX17eyAnKScgaWYgcGFyYW0uaXNDbG9zdXJlIH19eyVpZiBwYXJhbS50eXBlTmFtZS5pc09wdGlvbmFsJX0\/eyVlbmRpZiV9XXslIGVuZGZvciAlfSA9IFtdXG4gICAgeyUgZWxpZiBub3QgbWV0aG9kLnBhcmFtZXRlcnMuY291bnQgPT0gMCBhbmQgbm90IGhhc05vbkVzY2FwaW5nQ2xvc3VyZXMgJX1cbiAgICB7I1xuICAgIHslIGNhbGwgYWNjZXNzTGV2ZWwgbWV0aG9kLmFjY2Vzc0xldmVsICV9eyUgY2FsbCBzdGF0aWNTcGVjaWZpZXIgbWV0aG9kICV9dmFyIHslIGNhbGwgc3dpZnRpZnlNZXRob2ROYW1lIG1ldGhvZC5zZWxlY3Rvck5hbWUgJX1SZWNlaXZlZEFyZ3VtZW50czogKHslIGZvciBwYXJhbSBpbiBtZXRob2QucGFyYW1ldGVycyAlfXt7IHBhcmFtLm5hbWUgfX06IHslIGlmIHBhcmFtLnR5cGVBdHRyaWJ1dGVzLmVzY2FwaW5nICV9eyUgY2FsbCBleGlzdGVudGlhbENsb3N1cmVWYXJpYWJsZVR5cGVOYW1lIHBhcmFtLnR5cGVOYW1lLnVud3JhcHBlZFR5cGVOYW1lICV9eyUgZWxzZSAlfXslIGNhbGwgZXhpc3RlbnRpYWxDbG9zdXJlVmFyaWFibGVUeXBlTmFtZSBwYXJhbS50eXBlTmFtZSAlfXslIGVuZGlmICV9e3sgJywgJyBpZiBub3QgZm9ybG9vcC5sYXN0IH19eyUgZW5kZm9yICV9KT9cbiAgICB7JSBjYWxsIGFjY2Vzc0xldmVsIG1ldGhvZC5hY2Nlc3NMZXZlbCAlfXslIGNhbGwgc3RhdGljU3BlY2lmaWVyIG1ldGhvZCAlfXZhciB7JSBjYWxsIHN3aWZ0aWZ5TWV0aG9kTmFtZSBtZXRob2Quc2VsZWN0b3JOYW1lICV9UmVjZWl2ZWRJbnZvY2F0aW9uczogWyh7JSBmb3IgcGFyYW0gaW4gbWV0aG9kLnBhcmFtZXRlcnMgJX17eyBwYXJhbS5uYW1lIH19OiB7JSBpZiBwYXJhbS50eXBlQXR0cmlidXRlcy5lc2NhcGluZyAlfXslIGNhbGwgZXhpc3RlbnRpYWxDbG9zdXJlVmFyaWFibGVUeXBlTmFtZSBwYXJhbS50eXBlTmFtZS51bndyYXBwZWRUeXBlTmFtZSAlfXslIGVsc2UgJX17JSBjYWxsIGV4aXN0ZW50aWFsQ2xvc3VyZVZhcmlhYmxlVHlwZU5hbWUgcGFyYW0udHlwZU5hbWUgJX17JSBlbmRpZiAlfXt7ICcsICcgaWYgbm90IGZvcmxvb3AubGFzdCB9fXslIGVuZGZvciAlfSldID0gW11cbiAgICAjfVxuICAgIHslIGNhbGwgYWNjZXNzTGV2ZWwgbWV0aG9kLmFjY2Vzc0xldmVsICV9eyUgY2FsbCBzdGF0aWNTcGVjaWZpZXIgbWV0aG9kICV9dmFyIHslIGNhbGwgc3dpZnRpZnlNZXRob2ROYW1lIG1ldGhvZC5zZWxlY3Rvck5hbWUgJX1SZWNlaXZlZEFyZ3VtZW50czogKHslIGZvciBwYXJhbSBpbiBtZXRob2QucGFyYW1ldGVycyAlfXt7IHBhcmFtLm5hbWUgfX06IHslIGlmIHBhcmFtLnR5cGVBdHRyaWJ1dGVzLmVzY2FwaW5nICV9eyUgY2FsbCBleGlzdGVudGlhbENsb3N1cmVWYXJpYWJsZVR5cGVOYW1lIHBhcmFtLnR5cGVOYW1lLnVud3JhcHBlZFR5cGVOYW1lICV9eyUgZWxzZSAlfXslaWYgcGFyYW0uYW5ub3RhdGlvbnMub3ZlcnJpZGUgJX17e3BhcmFtLmFubm90YXRpb25zLm92ZXJyaWRlfX0geyVlbHNlJX17JSBjYWxsIGV4aXN0ZW50aWFsQ2xvc3VyZVZhcmlhYmxlVHlwZU5hbWUgcGFyYW0udHlwZU5hbWUgJX17JWVuZGlmJX17JSBlbmRpZiAlfXt7ICcsICcgaWYgbm90IGZvcmxvb3AubGFzdCB9fXslIGVuZGZvciAlfSk\\/XG57JSBlbmRtYWNybyAlfVxuXG57JSBtYWNybyB2YXJpYWJsZVRocm93YWJsZUVycm9yVXNhZ2UgdmFyaWFibGUgJX1cbiAgICAgICAgICAgIGlmIGxldCBlcnJvciA9IHslIGNhbGwgbW9ja2VkVmFyaWFibGVOYW1lIHZhcmlhYmxlICV9VGhyb3dhYmxlRXJyb3Ige1xuICAgICAgICAgICAgICAgIHRocm93IGVycm9yXG4gICAgICAgICAgICB9XG57JSBlbmRtYWNybyAlfVxuXG57JSBtYWNybyB2YXJpYWJsZUNsb3N1cmVEZWNsYXJhdGlvbiB2YXJpYWJsZSAlfVxuICAgIHslIGNhbGwgYWNjZXNzTGV2ZWwgdmFyaWFibGUucmVhZEFjY2VzcyAlfXZhciB7JSBjYWxsIHZhcmlhYmxlQ2xvc3VyZU5hbWUgdmFyaWFibGUgJX06ICgoKSB7JSBpZiB2YXJpYWJsZS5pc0FzeW5jICV9YXN5bmMgeyUgZW5kaWYgJX17JSBpZiB2YXJpYWJsZS50aHJvd3MgJX10aHJvd3MgeyUgZW5kaWYgJX0tPiB7JSBjYWxsIGV4aXN0ZW50aWFsVmFyaWFibGVUeXBlTmFtZSB2YXJpYWJsZS50eXBlTmFtZSAlfSk\/XG57JSBlbmRtYWNybyAlfVxuXG57JSBtYWNybyB2YXJpYWJsZUNsb3N1cmVOYW1lIHZhcmlhYmxlICV9eyUgY2FsbCBtb2NrZWRWYXJpYWJsZU5hbWUgdmFyaWFibGUgJX1DbG9zdXJleyUgZW5kbWFjcm8gJX1cblxueyUgbWFjcm8gbW9ja0FzeW5jT3JUaHJvd2luZ1ZhcmlhYmxlIHZhcmlhYmxlICV9XG4gICAgeyUgY2FsbCBhY2Nlc3NMZXZlbCB2YXJpYWJsZS5yZWFkQWNjZXNzICV9dmFyIHslIGNhbGwgbW9ja2VkVmFyaWFibGVOYW1lIHZhcmlhYmxlICV9Q2FsbHNDb3VudCA9IDBcbiAgICB7JSBjYWxsIGFjY2Vzc0xldmVsIHZhcmlhYmxlLnJlYWRBY2Nlc3MgJX12YXIgeyUgY2FsbCBtb2NrZWRWYXJpYWJsZU5hbWUgdmFyaWFibGUgJX1DYWxsZWQ6IEJvb2wge1xuICAgICAgICByZXR1cm4geyUgY2FsbCBtb2NrZWRWYXJpYWJsZU5hbWUgdmFyaWFibGUgJX1DYWxsc0NvdW50ID4gMFxuICAgIH1cblxuICAgIHslIGNhbGwgYWNjZXNzTGV2ZWwgdmFyaWFibGUucmVhZEFjY2VzcyAlfXZhciB7JSBjYWxsIG1vY2tlZFZhcmlhYmxlTmFtZSB2YXJpYWJsZSAlfTogeyUgY2FsbCBleGlzdGVudGlhbFZhcmlhYmxlVHlwZU5hbWUgdmFyaWFibGUudHlwZU5hbWUgJX0ge1xuICAgICAgICBnZXQgeyUgaWYgdmFyaWFibGUuaXNBc3luYyAlfWFzeW5jIHslIGVuZGlmICV9eyUgaWYgdmFyaWFibGUudGhyb3dzICV9dGhyb3dzIHslIGVuZGlmICV9e1xuICAgICAgICAgICAgeyUgaWYgdmFyaWFibGUudGhyb3dzICV9XG4gICAgICAgICAgICB7JSBjYWxsIHZhcmlhYmxlVGhyb3dhYmxlRXJyb3JVc2FnZSB2YXJpYWJsZSAlfVxuICAgICAgICAgICAgeyUgZW5kaWYgJX1cbiAgICAgICAgICAgIHslIGNhbGwgbW9ja2VkVmFyaWFibGVOYW1lIHZhcmlhYmxlICV9Q2FsbHNDb3VudCArPSAxXG4gICAgICAgICAgICBpZiBsZXQgeyUgY2FsbCB2YXJpYWJsZUNsb3N1cmVOYW1lIHZhcmlhYmxlICV9ID0geyUgY2FsbCB2YXJpYWJsZUNsb3N1cmVOYW1lIHZhcmlhYmxlICV9IHtcbiAgICAgICAgICAgICAgICByZXR1cm4ge3sgJ3RyeSAnIGlmIHZhcmlhYmxlLnRocm93cyB9fXt7ICdhd2FpdCAnIGlmIHZhcmlhYmxlLmlzQXN5bmMgfX17JSBjYWxsIHZhcmlhYmxlQ2xvc3VyZU5hbWUgdmFyaWFibGUgJX0oKVxuICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICByZXR1cm4geyUgY2FsbCB1bmRlcmx5aW5nTW9ja2VkVmFyaWFibGVOYW1lIHZhcmlhYmxlICV9XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG4gICAgeyUgY2FsbCBhY2Nlc3NMZXZlbCB2YXJpYWJsZS5yZWFkQWNjZXNzICV9dmFyIHslIGNhbGwgdW5kZXJseWluZ01vY2tlZFZhcmlhYmxlTmFtZSB2YXJpYWJsZSAlfTogeyUgY2FsbCBleGlzdGVudGlhbFZhcmlhYmxlVHlwZU5hbWUgdmFyaWFibGUudHlwZU5hbWUgJX17eyAnIScgaWYgbm90IHZhcmlhYmxlLmlzT3B0aW9uYWwgfX1cbiAgICB7JSBpZiB2YXJpYWJsZS50aHJvd3MgJX1cbiAgICAgICAgeyUgY2FsbCB2YXJpYWJsZVRocm93YWJsZUVycm9yRGVjbGFyYXRpb24gdmFyaWFibGUgJX1cbiAgICB7JSBlbmRpZiAlfVxuICAgIHslIGNhbGwgdmFyaWFibGVDbG9zdXJlRGVjbGFyYXRpb24gbWV0aG9kICV9XG57JSBlbmRtYWNybyAlfVxuXG57JSBtYWNybyB1bmRlcmx5aW5nTW9ja2VkVmFyaWFibGVOYW1lIHZhcmlhYmxlICV9dW5kZXJseWluZ3t7IHZhcmlhYmxlLm5hbWV8dXBwZXJGaXJzdExldHRlciB9fXslIGVuZG1hY3JvICV9XG57JSBtYWNybyBtb2NrZWRWYXJpYWJsZU5hbWUgdmFyaWFibGUgJX17eyB2YXJpYWJsZS5uYW1lIH19eyUgZW5kbWFjcm8gJX1cbnslIG1hY3JvIGV4aXN0ZW50aWFsVmFyaWFibGVUeXBlTmFtZSB0eXBlTmFtZSAlfXslIGlmIHR5cGVOYW1lfGNvbnRhaW5zOlwiYW55IFwiIGFuZCB0eXBlTmFtZXxjb250YWluczpcIiFcIiAlfXt7IHR5cGVOYW1lIHwgcmVwbGFjZTpcImFueVwiLFwiKGFueVwiIHwgcmVwbGFjZTpcIiFcIixcIikhXCIgfX17JSBlbGlmIHR5cGVOYW1lfGNvbnRhaW5zOlwiYW55IFwiIGFuZCB0eXBlTmFtZS5pc09wdGlvbmFsICV9e3sgdHlwZU5hbWUgfCByZXBsYWNlOlwiYW55XCIsXCIoYW55XCIgfCByZXBsYWNlOlwiP1wiLFwiKT9cIiB9fXslIGVsaWYgdHlwZU5hbWV8Y29udGFpbnM6XCJhbnkgXCIgYW5kIHR5cGVOYW1lLmlzQ2xvc3VyZSBhbmQgdHlwZU5hbWV8Y29udGFpbnM6XCI\/XCIlfSh7eyB0eXBlTmFtZSB8IHJlcGxhY2U6XCJhbnlcIixcIihhbnlcIiB8IHJlcGxhY2U6XCI\/XCIsXCIpP1wiIH19KXslIGVsaWYgdHlwZU5hbWV8Y29udGFpbnM6XCJzb21lIFwiIGFuZCB0eXBlTmFtZXxjb250YWluczpcIiFcIiAlfXt7IHR5cGVOYW1lIHwgcmVwbGFjZTpcInNvbWVcIixcIihzb21lXCIgfCByZXBsYWNlOlwiIVwiLFwiKSFcIiB9fXslIGVsaWYgdHlwZU5hbWV8Y29udGFpbnM6XCJzb21lIFwiIGFuZCB0eXBlTmFtZS5pc09wdGlvbmFsICV9e3sgdHlwZU5hbWUgfCByZXBsYWNlOlwic29tZVwiLFwiKHNvbWVcIiB8IHJlcGxhY2U6XCI\/XCIsXCIpP1wiIH19eyUgZWxpZiB0eXBlTmFtZXxjb250YWluczpcInNvbWUgXCIgYW5kIHR5cGVOYW1lLmlzQ2xvc3VyZSBhbmQgdHlwZU5hbWV8Y29udGFpbnM6XCI\/XCIlfSh7eyB0eXBlTmFtZSB8IHJlcGxhY2U6XCJzb21lXCIsXCIoc29tZVwiIHwgcmVwbGFjZTpcIj9cIixcIik\/XCIgfX0peyVlbHNlJX17eyB0eXBlTmFtZSB9fXslZW5kaWYlfXslIGVuZG1hY3JvICV9XG57JSBtYWNybyBleGlzdGVudGlhbFBhcmFtZXRlclR5cGVOYW1lIHR5cGVOYW1lICV9eyUgaWYgdHlwZU5hbWV8Y29udGFpbnM6XCJhbnkgXCIgYW5kIHR5cGVOYW1lfGNvbnRhaW5zOlwiIVwiICV9e3sgdHlwZU5hbWUgfCByZXBsYWNlOlwiYW55XCIsXCIoYW55XCIgfCByZXBsYWNlOlwiIVwiLFwiKSFcIiB9fXslIGVsaWYgdHlwZU5hbWV8Y29udGFpbnM6XCJhbnkgXCIgYW5kIHR5cGVOYW1lLmlzQ2xvc3VyZSBhbmQgdHlwZU5hbWV8Y29udGFpbnM6XCI\/XCIgJX17eyB0eXBlTmFtZSB8IHJlcGxhY2U6XCJhbnlcIixcIihhbnlcIiB8IHJlcGxhY2U6XCI\/XCIsXCIpP1wiIH19eyUgZWxpZiB0eXBlTmFtZXxjb250YWluczpcImFueSBcIiBhbmQgdHlwZU5hbWUuaXNPcHRpb25hbCAlfXt7IHR5cGVOYW1lIHwgcmVwbGFjZTpcImFueVwiLFwiKGFueVwiIHwgcmVwbGFjZTpcIj9cIixcIik\/XCIgfX17JSBlbGlmIHR5cGVOYW1lfGNvbnRhaW5zOlwic29tZSBcIiBhbmQgdHlwZU5hbWV8Y29udGFpbnM6XCIhXCIgJX17eyB0eXBlTmFtZSB8IHJlcGxhY2U6XCJzb21lXCIsXCIoc29tZVwiIHwgcmVwbGFjZTpcIiFcIixcIikhXCIgfX17JSBlbGlmIHR5cGVOYW1lfGNvbnRhaW5zOlwic29tZSBcIiBhbmQgdHlwZU5hbWUuaXNDbG9zdXJlIGFuZCB0eXBlTmFtZXxjb250YWluczpcIj9cIiAlfXt7IHR5cGVOYW1lIHwgcmVwbGFjZTpcInNvbWVcIixcIihzb21lXCIgfCByZXBsYWNlOlwiP1wiLFwiKT9cIiB9fXslIGVsaWYgdHlwZU5hbWV8Y29udGFpbnM6XCJzb21lIFwiIGFuZCB0eXBlTmFtZS5pc09wdGlvbmFsICV9e3sgdHlwZU5hbWUgfCByZXBsYWNlOlwic29tZVwiLFwiKHNvbWVcIiB8IHJlcGxhY2U6XCI\/XCIsXCIpP1wiIH19eyVlbHNlJX17eyB0eXBlTmFtZSB9fXslZW5kaWYlfXslIGVuZG1hY3JvICV9XG57JSBtYWNybyBtZXRob2ROYW1lIG1ldGhvZCAlfWZ1bmMge3sgbWV0aG9kLnNob3J0TmFtZX19KHslLSBmb3IgcGFyYW0gaW4gbWV0aG9kLnBhcmFtZXRlcnMgJX17JSBpZiBwYXJhbS5hcmd1bWVudExhYmVsID09IG5pbCAlfV8ge3sgcGFyYW0ubmFtZSB9fXslZWxpZiBwYXJhbS5hcmd1bWVudExhYmVsID09IHBhcmFtLm5hbWUlfXt7IHBhcmFtLm5hbWUgfX17JWVsc2UlfXt7IHBhcmFtLmFyZ3VtZW50TGFiZWwgfX0ge3sgcGFyYW0ubmFtZSB9fXslIGVuZGlmICV9OiB7JSBjYWxsIGV4aXN0ZW50aWFsUGFyYW1ldGVyVHlwZU5hbWUgcGFyYW0udHlwZU5hbWUgJX17JSBpZiBub3QgZm9ybG9vcC5sYXN0ICV9LCB7JSBlbmRpZiAlfXslIGVuZGZvciAtJX0peyUgZW5kbWFjcm8gJX1cblxueyUgbWFjcm8gZXhpc3RlbnRpYWxDbG9zdXJlVmFyaWFibGVUeXBlTmFtZSB0eXBlTmFtZSAlfXslIGlmIHR5cGVOYW1lfGNvbnRhaW5zOlwiYW55IFwiIGFuZCB0eXBlTmFtZXxjb250YWluczpcIiFcIiAlfXt7IHR5cGVOYW1lIHwgcmVwbGFjZTpcImFueVwiLFwiKGFueVwiIHwgcmVwbGFjZTpcIiFcIixcIik\/XCIgfX17JSBlbGlmIHR5cGVOYW1lfGNvbnRhaW5zOlwiYW55IFwiIGFuZCB0eXBlTmFtZS5pc0Nsb3N1cmUgYW5kIHR5cGVOYW1lfGNvbnRhaW5zOlwiP1wiICV9e3sgdHlwZU5hbWUgfCByZXBsYWNlOlwiYW55XCIsXCIoYW55XCIgfCByZXBsYWNlOlwiP1wiLFwiKT9cIiB9fXslIGVsaWYgdHlwZU5hbWV8Y29udGFpbnM6XCJhbnkgXCIgYW5kIHR5cGVOYW1lfGNvbnRhaW5zOlwiP1wiICV9e3sgdHlwZU5hbWUgfCByZXBsYWNlOlwiYW55XCIsXCIoYW55XCIgfCByZXBsYWNlOlwiP1wiLFwiKT9cIiB9fXslIGVsaWYgdHlwZU5hbWV8Y29udGFpbnM6XCJzb21lIFwiIGFuZCB0eXBlTmFtZXxjb250YWluczpcIiFcIiAlfXt7IHR5cGVOYW1lIHwgcmVwbGFjZTpcInNvbWVcIixcIihhbnlcIiB8IHJlcGxhY2U6XCIhXCIsXCIpP1wiIH19eyUgZWxpZiB0eXBlTmFtZXxjb250YWluczpcInNvbWUgXCIgYW5kIHR5cGVOYW1lLmlzQ2xvc3VyZSBhbmQgdHlwZU5hbWV8Y29udGFpbnM6XCI\/XCIgJX17eyB0eXBlTmFtZSB8IHJlcGxhY2U6XCJzb21lXCIsXCIoYW55XCIgfCByZXBsYWNlOlwiP1wiLFwiKT9cIiB9fXslIGVsaWYgdHlwZU5hbWV8Y29udGFpbnM6XCJzb21lIFwiIGFuZCB0eXBlTmFtZXxjb250YWluczpcIj9cIiAlfXt7IHR5cGVOYW1lIHwgcmVwbGFjZTpcInNvbWVcIixcIihhbnlcIiB8IHJlcGxhY2U6XCI\/XCIsXCIpP1wiIH19eyVlbHNlJX17eyB0eXBlTmFtZXxyZXBsYWNlOlwic29tZSBcIixcImFueSBcIiB9fXslZW5kaWYlfXslIGVuZG1hY3JvICV9XG5cblxueyUgZm9yIHR5cGUgaW4gdHlwZXMucHJvdG9jb2xzIHdoZXJlIHR5cGUuYmFzZWQuQXV0b01vY2thYmxlIG9yIHR5cGV8YW5ub3RhdGVkOlwiQXV0b01vY2thYmxlXCIgJX17JSBpZiB0eXBlLm5hbWUgIT0gXCJBdXRvTW9ja2FibGVcIiAlfVxueyUgY2FsbCBhY2Nlc3NMZXZlbCB0eXBlLmFjY2Vzc0xldmVsICV9Y2xhc3Mge3sgdHlwZS5uYW1lIH19TW9jazoge3sgdHlwZS5uYW1lIH19IHtcblxuICAgIHslIGlmIHR5cGUuYWNjZXNzTGV2ZWwgPT0gXCJwdWJsaWNcIiAlfXB1YmxpYyBpbml0KCkge317JSBlbmRpZiAlfVxuXG57JSBmb3IgdmFyaWFibGUgaW4gdHlwZS5hbGxWYXJpYWJsZXN8IWRlZmluZWRJbkV4dGVuc2lvbiAlfVxuICAgIHslIGlmIHZhcmlhYmxlLmlzQXN5bmMgb3IgdmFyaWFibGUudGhyb3dzICV9eyUgY2FsbCBtb2NrQXN5bmNPclRocm93aW5nVmFyaWFibGUgdmFyaWFibGUgJX17JSBlbGlmIHZhcmlhYmxlLmlzT3B0aW9uYWwgJX17JSBjYWxsIG1vY2tPcHRpb25hbFZhcmlhYmxlIHZhcmlhYmxlICV9eyUgZWxpZiB2YXJpYWJsZS5pc0FycmF5IG9yIHZhcmlhYmxlLmlzRGljdGlvbmFyeSAlfXslIGNhbGwgbW9ja05vbk9wdGlvbmFsQXJyYXlPckRpY3Rpb25hcnlWYXJpYWJsZSB2YXJpYWJsZSAlfXslIGVsc2UgJX17JSBjYWxsIG1vY2tOb25PcHRpb25hbFZhcmlhYmxlIHZhcmlhYmxlICV9eyUgZW5kaWYgJX1cbnslIGVuZGZvciAlfVxuXG57JSBpZiB0eXBlLmFsbE1ldGhvZHN8c3RhdGljfGNvdW50ICE9IDAgYW5kIHR5cGUuYWxsTWV0aG9kc3xpbml0aWFsaXplcnxjb3VudCAhPSB0eXBlLmFsbE1ldGhvZHN8c3RhdGljfGNvdW50ICV9XG4gICAgc3RhdGljIGZ1bmMgcmVzZXQoKVxuICAgIHtcbiAgICB7JSBmb3IgbWV0aG9kIGluIHR5cGUuYWxsTWV0aG9kc3xzdGF0aWMgJX1cbiAgICAgICAgeyUgY2FsbCByZXNldE1ldGhvZCBtZXRob2QgJX1cbiAgICB7JSBlbmRmb3IgJX1cbiAgICB9XG57JSBlbmRpZiAlfVxuXG57JSBmb3IgbWV0aG9kIGluIHR5cGUuYWxsTWV0aG9kc3whZGVmaW5lZEluRXh0ZW5zaW9uICV9XG4gICAgeyUgY2FsbCBtb2NrTWV0aG9kIG1ldGhvZCAlfVxueyUgZW5kZm9yICV9XG59XG57JSBlbmRpZiAlfXslIGVuZGZvciAlfVxuIiwidmVyc2lvbiI6MywiZmF2b3JpdGUiOnRydWUsImF1dGhvciI6IiIsImdlbmVyYXRlZENvZGUiOiJcL1wvIHN3aWZ0bGludDpkaXNhYmxlIGxpbmVfbGVuZ3RoXG5cL1wvIHN3aWZ0bGludDpkaXNhYmxlIHZhcmlhYmxlX25hbWVcblxuaW1wb3J0IEZvdW5kYXRpb25cbiNpZiBvcyhpT1MpIHx8IG9zKHR2T1MpIHx8IG9zKHdhdGNoT1MpXG5pbXBvcnQgVUlLaXRcbmltcG9ydCBDb21iaW5lXG4jZWxzZWlmIG9zKE9TWClcbmltcG9ydCBBcHBLaXRcbiNlbmRpZlxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxuXG5cblxucHVibGljIGNsYXNzIEF1dGhlbnRpY2F0aW9uU2VydmljZU1vY2s6IEF1dGhlbnRpY2F0aW9uU2VydmljZSB7XG5cbiAgICBwdWJsaWMgaW5pdCgpIHt9XG5cbiAgICBwdWJsaWMgdmFyIGlzQXV0aGVudGljYXRlZDogQW55UHVibGlzaGVyPEJvb2wsIE5ldmVyPiB7XG4gICAgICAgIHJldHVybiB1bmRlcmx5aW5nSXNBdXRoZW50aWNhdGVkLmVyYXNlVG9BbnlQdWJsaXNoZXIoKVxuICAgIH1cbiAgICBwdWJsaWMgdmFyIHVuZGVybHlpbmdJc0F1dGhlbnRpY2F0ZWQgPSBQYXNzdGhyb3VnaFN1YmplY3Q8Qm9vbCwgTmV2ZXI+KClcblxuICAgIHB1YmxpYyB2YXIgbGFzdElzQXV0aGVudGljYXRlZFZhbHVlOiBCb29sIHtcbiAgICAgICAgZ2V0IHsgcmV0dXJuIHVuZGVybHlpbmdMYXN0SXNBdXRoZW50aWNhdGVkVmFsdWUgfVxuICAgICAgICBzZXQodmFsdWUpIHsgdW5kZXJseWluZ0xhc3RJc0F1dGhlbnRpY2F0ZWRWYWx1ZSA9IHZhbHVlIH1cbiAgICB9XG4gICAgcHVibGljIHZhciB1bmRlcmx5aW5nTGFzdElzQXV0aGVudGljYXRlZFZhbHVlOiAoQm9vbCkhXG5cblxuXG4gICAgXC9cL01BUks6IC0gc2lnbkluXG5cbiAgICBwdWJsaWMgdmFyIHNpZ25JbldpdGhPcHRpb25zVGhyb3dhYmxlRXJyb3I6IEVycm9yP1xuICAgIHB1YmxpYyB2YXIgc2lnbkluV2l0aE9wdGlvbnNDYWxsc0NvdW50ID0gMFxuICAgIHB1YmxpYyB2YXIgc2lnbkluV2l0aE9wdGlvbnNDYWxsZWQ6IEJvb2wge1xuICAgICAgICByZXR1cm4gc2lnbkluV2l0aE9wdGlvbnNDYWxsc0NvdW50ID4gMFxuICAgIH1cbiAgICBwdWJsaWMgdmFyIHNpZ25JbldpdGhPcHRpb25zUmVjZWl2ZWRPcHRpb25zOiBTaWduSW5PcHRpb25zP1xuICAgIHB1YmxpYyB2YXIgc2lnbkluV2l0aE9wdGlvbnNSZWNlaXZlZEludm9jYXRpb25zOiBbU2lnbkluT3B0aW9ucz9dID0gW11cbiAgICBwdWJsaWMgdmFyIHNpZ25JbldpdGhPcHRpb25zQ2xvc3VyZTogKChTaWduSW5PcHRpb25zPykgYXN5bmMgdGhyb3dzIC0+ICBWb2lkICk\/XG5cbiAgICBwdWJsaWMgZnVuYyBzaWduSW4od2l0aE9wdGlvbnMgb3B0aW9uczogU2lnbkluT3B0aW9ucz8pIGFzeW5jIHRocm93cyB7XG4gICAgICAgIGlmIGxldCBlcnJvciA9IHNpZ25JbldpdGhPcHRpb25zVGhyb3dhYmxlRXJyb3Ige1xuICAgICAgICAgICAgdGhyb3cgZXJyb3JcbiAgICAgICAgfVxuICAgICAgICBzaWduSW5XaXRoT3B0aW9uc0NhbGxzQ291bnQgKz0gMVxuICAgICAgICBzaWduSW5XaXRoT3B0aW9uc1JlY2VpdmVkT3B0aW9ucyA9IG9wdGlvbnNcbiAgICAgICAgc2lnbkluV2l0aE9wdGlvbnNSZWNlaXZlZEludm9jYXRpb25zLmFwcGVuZChvcHRpb25zKVxuICAgICAgICB0cnkgYXdhaXQgc2lnbkluV2l0aE9wdGlvbnNDbG9zdXJlPyhvcHRpb25zKVxuICAgIH1cblxuICAgIFwvXC9NQVJLOiAtIHNpZ25PdXRcblxuICAgIHB1YmxpYyB2YXIgc2lnbk91dFRocm93YWJsZUVycm9yOiBFcnJvcj9cbiAgICBwdWJsaWMgdmFyIHNpZ25PdXRDYWxsc0NvdW50ID0gMFxuICAgIHB1YmxpYyB2YXIgc2lnbk91dENhbGxlZDogQm9vbCB7XG4gICAgICAgIHJldHVybiBzaWduT3V0Q2FsbHNDb3VudCA+IDBcbiAgICB9XG4gICAgcHVibGljIHZhciBzaWduT3V0Q2xvc3VyZTogKCgpIGFzeW5jIHRocm93cyAtPiAgVm9pZCApP1xuXG4gICAgcHVibGljIGZ1bmMgc2lnbk91dCgpIGFzeW5jIHRocm93cyB7XG4gICAgICAgIGlmIGxldCBlcnJvciA9IHNpZ25PdXRUaHJvd2FibGVFcnJvciB7XG4gICAgICAgICAgICB0aHJvdyBlcnJvclxuICAgICAgICB9XG4gICAgICAgIHNpZ25PdXRDYWxsc0NvdW50ICs9IDFcbiAgICAgICAgdHJ5IGF3YWl0IHNpZ25PdXRDbG9zdXJlPygpXG4gICAgfVxuXG4gICAgXC9cL01BUks6IC0gcnVuQXV0aGVudGljYXRlZDxUPlxuXG4gICAgXC9cL1wvOkdlbmVyaWNzIG5vdCBwZXJmZXJjdGx5IHN1cHBvcnRlZCEgXG4gICAgcHVibGljIHZhciBydW5BdXRoZW50aWNhdGVkQmxvY2tUaHJvd2FibGVFcnJvcjogRXJyb3I\/XG4gICAgcHVibGljIHZhciBydW5BdXRoZW50aWNhdGVkQmxvY2tDYWxsc0NvdW50ID0gMFxuICAgIHB1YmxpYyB2YXIgcnVuQXV0aGVudGljYXRlZEJsb2NrQ2FsbGVkOiBCb29sIHtcbiAgICAgICAgcmV0dXJuIHJ1bkF1dGhlbnRpY2F0ZWRCbG9ja0NhbGxzQ291bnQgPiAwXG4gICAgfVxuICAgIHB1YmxpYyB2YXIgcnVuQXV0aGVudGljYXRlZEJsb2NrUmVjZWl2ZWRCbG9jazogKCgpIGFzeW5jIHRocm93cyAtPiBBbnkpP1xuICAgIHB1YmxpYyB2YXIgcnVuQXV0aGVudGljYXRlZEJsb2NrUmVjZWl2ZWRJbnZvY2F0aW9uczogWygoKSBhc3luYyB0aHJvd3MgLT4gQW55KV0gPSBbXVxuICAgIHB1YmxpYyB2YXIgcnVuQXV0aGVudGljYXRlZEJsb2NrUmV0dXJuVmFsdWU6IEFueT9cbiAgICBwdWJsaWMgdmFyIHJ1bkF1dGhlbnRpY2F0ZWRCbG9ja0Nsb3N1cmU6ICgoQGVzY2FwaW5nICgpIGFzeW5jIHRocm93cyAtPiBBbnkpIGFzeW5jIHRocm93cyAtPiBBbnkpP1xuXG4gICAgcHVibGljIGZ1bmMgcnVuQXV0aGVudGljYXRlZDxUPihibG9jazogQGVzY2FwaW5nICgpIGFzeW5jIHRocm93cyAtPiBUKSBhc3luYyB0aHJvd3MgLT4gVCB7XG4gICAgICAgIGlmIGxldCBlcnJvciA9IHJ1bkF1dGhlbnRpY2F0ZWRCbG9ja1Rocm93YWJsZUVycm9yIHtcbiAgICAgICAgICAgIHRocm93IGVycm9yXG4gICAgICAgIH1cbiAgICAgICAgcnVuQXV0aGVudGljYXRlZEJsb2NrQ2FsbHNDb3VudCArPSAxXG4gICAgICAgIHJ1bkF1dGhlbnRpY2F0ZWRCbG9ja1JlY2VpdmVkQmxvY2sgPSBibG9ja1xuICAgICAgICBydW5BdXRoZW50aWNhdGVkQmxvY2tSZWNlaXZlZEludm9jYXRpb25zLmFwcGVuZChibG9jaylcbiAgICAgICAgaWYgbGV0IHJ1bkF1dGhlbnRpY2F0ZWRCbG9ja0Nsb3N1cmUgPSBydW5BdXRoZW50aWNhdGVkQmxvY2tDbG9zdXJlIHtcbiAgICAgICAgICAgIHJldHVybiB0cnkgYXdhaXQgcnVuQXV0aGVudGljYXRlZEJsb2NrQ2xvc3VyZShibG9jaykgYXMhIFRcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIHJldHVybiBydW5BdXRoZW50aWNhdGVkQmxvY2tSZXR1cm5WYWx1ZSBhcyEgVFxuICAgICAgICB9XG4gICAgfVxuXG59XG5wdWJsaWMgY2xhc3MgSHR0cENsaWVudE1vY2s6IEh0dHBDbGllbnQge1xuXG4gICAgcHVibGljIGluaXQoKSB7fVxuXG4gICAgcHVibGljIHZhciBiYXNlVVJMOiBVUkw\/XG4gICAgcHVibGljIHZhciBnbG9iYWxPcHRpb25zOiBIdHRwQ2xpZW50T3B0aW9ucz9cblxuXG4gICAgXC9cL01BUks6IC0gcmVxdWVzdDxUOiBEZWNvZGFibGU+XG5cbiAgICBcL1wvXC86R2VuZXJpY3Mgbm90IHBlcmZlcmN0bHkgc3VwcG9ydGVkISBcbiAgICBwdWJsaWMgdmFyIHJlcXVlc3RNZXRob2RQYXRoUXVlcnlQYXJhbWV0ZXJzT3B0aW9uc1Rocm93YWJsZUVycm9yOiBFcnJvcj9cbiAgICBwdWJsaWMgdmFyIHJlcXVlc3RNZXRob2RQYXRoUXVlcnlQYXJhbWV0ZXJzT3B0aW9uc0NhbGxzQ291bnQgPSAwXG4gICAgcHVibGljIHZhciByZXF1ZXN0TWV0aG9kUGF0aFF1ZXJ5UGFyYW1ldGVyc09wdGlvbnNDYWxsZWQ6IEJvb2wge1xuICAgICAgICByZXR1cm4gcmVxdWVzdE1ldGhvZFBhdGhRdWVyeVBhcmFtZXRlcnNPcHRpb25zQ2FsbHNDb3VudCA+IDBcbiAgICB9XG4gICAgcHVibGljIHZhciByZXF1ZXN0TWV0aG9kUGF0aFF1ZXJ5UGFyYW1ldGVyc09wdGlvbnNSZWNlaXZlZEFyZ3VtZW50czogKHR5cGU6IEFueS5UeXBlICwgbWV0aG9kOiBIdHRwTWV0aG9kLCBwYXRoOiBTdHJpbmcsIHF1ZXJ5OiBbU3RyaW5nOiBBbnldPywgcGFyYW1ldGVyczogW1N0cmluZzogQW55XT8sIG9wdGlvbnM6IEh0dHBDbGllbnRPcHRpb25zPyk\/XG4gICAgcHVibGljIHZhciByZXF1ZXN0TWV0aG9kUGF0aFF1ZXJ5UGFyYW1ldGVyc09wdGlvbnNSZWNlaXZlZEludm9jYXRpb25zOiBbKHR5cGU6IEFueS5UeXBlICwgbWV0aG9kOiBIdHRwTWV0aG9kLCBwYXRoOiBTdHJpbmcsIHF1ZXJ5OiBbU3RyaW5nOiBBbnldPywgcGFyYW1ldGVyczogW1N0cmluZzogQW55XT8sIG9wdGlvbnM6IEh0dHBDbGllbnRPcHRpb25zPyldID0gW11cblxuICAgIHB1YmxpYyB2YXIgcmVxdWVzdE1ldGhvZFBhdGhRdWVyeVBhcmFtZXRlcnNPcHRpb25zUmV0dXJuVmFsdWU6IEFueT9cbiAgICBwdWJsaWMgdmFyIHJlcXVlc3RNZXRob2RQYXRoUXVlcnlQYXJhbWV0ZXJzT3B0aW9uc0Nsb3N1cmU6ICgoQW55LlR5cGUsIEh0dHBNZXRob2QsIFN0cmluZywgW1N0cmluZzogQW55XT8sIFtTdHJpbmc6IEFueV0\/LCBIdHRwQ2xpZW50T3B0aW9ucz8pIGFzeW5jIHRocm93cyAtPiBBbnkpP1xuXG4gICAgcHVibGljIGZ1bmMgcmVxdWVzdDxUOiBEZWNvZGFibGU+KF8gdHlwZTogVC5UeXBlLCBtZXRob2Q6IEh0dHBNZXRob2QsIHBhdGg6IFN0cmluZywgcXVlcnk6IFtTdHJpbmc6IEFueV0\/LCBwYXJhbWV0ZXJzOiBbU3RyaW5nOiBBbnldPywgb3B0aW9uczogSHR0cENsaWVudE9wdGlvbnM\/KSBhc3luYyB0aHJvd3MgLT4gVCB7XG4gICAgICAgIGlmIGxldCBlcnJvciA9IHJlcXVlc3RNZXRob2RQYXRoUXVlcnlQYXJhbWV0ZXJzT3B0aW9uc1Rocm93YWJsZUVycm9yIHtcbiAgICAgICAgICAgIHRocm93IGVycm9yXG4gICAgICAgIH1cbiAgICAgICAgcmVxdWVzdE1ldGhvZFBhdGhRdWVyeVBhcmFtZXRlcnNPcHRpb25zQ2FsbHNDb3VudCArPSAxXG4gICAgICAgIHJlcXVlc3RNZXRob2RQYXRoUXVlcnlQYXJhbWV0ZXJzT3B0aW9uc1JlY2VpdmVkQXJndW1lbnRzID0gKHR5cGU6IHR5cGUsIG1ldGhvZDogbWV0aG9kLCBwYXRoOiBwYXRoLCBxdWVyeTogcXVlcnksIHBhcmFtZXRlcnM6IHBhcmFtZXRlcnMsIG9wdGlvbnM6IG9wdGlvbnMpXG4gICAgICAgIHJlcXVlc3RNZXRob2RQYXRoUXVlcnlQYXJhbWV0ZXJzT3B0aW9uc1JlY2VpdmVkSW52b2NhdGlvbnMuYXBwZW5kKCh0eXBlOiB0eXBlLCBtZXRob2Q6IG1ldGhvZCwgcGF0aDogcGF0aCwgcXVlcnk6IHF1ZXJ5LCBwYXJhbWV0ZXJzOiBwYXJhbWV0ZXJzLCBvcHRpb25zOiBvcHRpb25zKSlcbiAgICAgICAgaWYgbGV0IHJlcXVlc3RNZXRob2RQYXRoUXVlcnlQYXJhbWV0ZXJzT3B0aW9uc0Nsb3N1cmUgPSByZXF1ZXN0TWV0aG9kUGF0aFF1ZXJ5UGFyYW1ldGVyc09wdGlvbnNDbG9zdXJlIHtcbiAgICAgICAgICAgIHJldHVybiB0cnkgYXdhaXQgcmVxdWVzdE1ldGhvZFBhdGhRdWVyeVBhcmFtZXRlcnNPcHRpb25zQ2xvc3VyZSh0eXBlLCBtZXRob2QsIHBhdGgsIHF1ZXJ5LCBwYXJhbWV0ZXJzLCBvcHRpb25zKSBhcyEgVFxuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgcmV0dXJuIHJlcXVlc3RNZXRob2RQYXRoUXVlcnlQYXJhbWV0ZXJzT3B0aW9uc1JldHVyblZhbHVlIGFzISBUXG4gICAgICAgIH1cbiAgICB9XG5cbiAgICBcL1wvTUFSSzogLSByZXF1ZXN0PFQ6IERlY29kYWJsZSwgQm9keTogRW5jb2RhYmxlPlxuXG4gICAgXC9cL1wvOkdlbmVyaWNzIG5vdCBwZXJmZXJjdGx5IHN1cHBvcnRlZCEgXG4gICAgcHVibGljIHZhciByZXF1ZXN0TWV0aG9kUGF0aFF1ZXJ5Qm9keU9wdGlvbnNUaHJvd2FibGVFcnJvcjogRXJyb3I\/XG4gICAgcHVibGljIHZhciByZXF1ZXN0TWV0aG9kUGF0aFF1ZXJ5Qm9keU9wdGlvbnNDYWxsc0NvdW50ID0gMFxuICAgIHB1YmxpYyB2YXIgcmVxdWVzdE1ldGhvZFBhdGhRdWVyeUJvZHlPcHRpb25zQ2FsbGVkOiBCb29sIHtcbiAgICAgICAgcmV0dXJuIHJlcXVlc3RNZXRob2RQYXRoUXVlcnlCb2R5T3B0aW9uc0NhbGxzQ291bnQgPiAwXG4gICAgfVxuICAgIHB1YmxpYyB2YXIgcmVxdWVzdE1ldGhvZFBhdGhRdWVyeUJvZHlPcHRpb25zUmVjZWl2ZWRBcmd1bWVudHM6ICh0eXBlOiBBbnkuVHlwZSAsIG1ldGhvZDogSHR0cE1ldGhvZCwgcGF0aDogU3RyaW5nLCBxdWVyeTogW1N0cmluZzogQW55XT8sIGJvZHk6IEFueT8gLCBvcHRpb25zOiBIdHRwQ2xpZW50T3B0aW9ucz8pP1xuICAgIHB1YmxpYyB2YXIgcmVxdWVzdE1ldGhvZFBhdGhRdWVyeUJvZHlPcHRpb25zUmVjZWl2ZWRJbnZvY2F0aW9uczogWyh0eXBlOiBBbnkuVHlwZSAsIG1ldGhvZDogSHR0cE1ldGhvZCwgcGF0aDogU3RyaW5nLCBxdWVyeTogW1N0cmluZzogQW55XT8sIGJvZHk6IEFueT8gLCBvcHRpb25zOiBIdHRwQ2xpZW50T3B0aW9ucz8pXSA9IFtdXG5cbiAgICBwdWJsaWMgdmFyIHJlcXVlc3RNZXRob2RQYXRoUXVlcnlCb2R5T3B0aW9uc1JldHVyblZhbHVlOiBBbnk\/XG4gICAgcHVibGljIHZhciByZXF1ZXN0TWV0aG9kUGF0aFF1ZXJ5Qm9keU9wdGlvbnNDbG9zdXJlOiAoKEFueS5UeXBlLCBIdHRwTWV0aG9kLCBTdHJpbmcsIFtTdHJpbmc6IEFueV0\/LCBBbnk\/LCBIdHRwQ2xpZW50T3B0aW9ucz8pIGFzeW5jIHRocm93cyAtPiBBbnkpP1xuXG4gICAgcHVibGljIGZ1bmMgcmVxdWVzdDxUOiBEZWNvZGFibGUsIEJvZHk6IEVuY29kYWJsZT4oXyB0eXBlOiBULlR5cGUsIG1ldGhvZDogSHR0cE1ldGhvZCwgcGF0aDogU3RyaW5nLCBxdWVyeTogW1N0cmluZzogQW55XT8sIGJvZHk6IEJvZHk\/LCBvcHRpb25zOiBIdHRwQ2xpZW50T3B0aW9ucz8pIGFzeW5jIHRocm93cyAtPiBUIHtcbiAgICAgICAgaWYgbGV0IGVycm9yID0gcmVxdWVzdE1ldGhvZFBhdGhRdWVyeUJvZHlPcHRpb25zVGhyb3dhYmxlRXJyb3Ige1xuICAgICAgICAgICAgdGhyb3cgZXJyb3JcbiAgICAgICAgfVxuICAgICAgICByZXF1ZXN0TWV0aG9kUGF0aFF1ZXJ5Qm9keU9wdGlvbnNDYWxsc0NvdW50ICs9IDFcbiAgICAgICAgcmVxdWVzdE1ldGhvZFBhdGhRdWVyeUJvZHlPcHRpb25zUmVjZWl2ZWRBcmd1bWVudHMgPSAodHlwZTogdHlwZSwgbWV0aG9kOiBtZXRob2QsIHBhdGg6IHBhdGgsIHF1ZXJ5OiBxdWVyeSwgYm9keTogYm9keSwgb3B0aW9uczogb3B0aW9ucylcbiAgICAgICAgcmVxdWVzdE1ldGhvZFBhdGhRdWVyeUJvZHlPcHRpb25zUmVjZWl2ZWRJbnZvY2F0aW9ucy5hcHBlbmQoKHR5cGU6IHR5cGUsIG1ldGhvZDogbWV0aG9kLCBwYXRoOiBwYXRoLCBxdWVyeTogcXVlcnksIGJvZHk6IGJvZHksIG9wdGlvbnM6IG9wdGlvbnMpKVxuICAgICAgICBpZiBsZXQgcmVxdWVzdE1ldGhvZFBhdGhRdWVyeUJvZHlPcHRpb25zQ2xvc3VyZSA9IHJlcXVlc3RNZXRob2RQYXRoUXVlcnlCb2R5T3B0aW9uc0Nsb3N1cmUge1xuICAgICAgICAgICAgcmV0dXJuIHRyeSBhd2FpdCByZXF1ZXN0TWV0aG9kUGF0aFF1ZXJ5Qm9keU9wdGlvbnNDbG9zdXJlKHR5cGUsIG1ldGhvZCwgcGF0aCwgcXVlcnksIGJvZHksIG9wdGlvbnMpIGFzISBUXG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICByZXR1cm4gcmVxdWVzdE1ldGhvZFBhdGhRdWVyeUJvZHlPcHRpb25zUmV0dXJuVmFsdWUgYXMhIFRcbiAgICAgICAgfVxuICAgIH1cblxufVxuY2xhc3MgU3dpdGNoV2l0aFRleHRDZWxsUHJvdG9jb2xNb2NrOiBTd2l0Y2hXaXRoVGV4dENlbGxQcm90b2NvbCB7XG5cblxuICAgIHZhciB0aXRsZTogU3RyaW5nIHtcbiAgICAgICAgZ2V0IHsgcmV0dXJuIHVuZGVybHlpbmdUaXRsZSB9XG4gICAgICAgIHNldCh2YWx1ZSkgeyB1bmRlcmx5aW5nVGl0bGUgPSB2YWx1ZSB9XG4gICAgfVxuICAgIHZhciB1bmRlcmx5aW5nVGl0bGU6IChTdHJpbmcpIVxuXG4gICAgdmFyIHRpdGxlRm9udDogVUlGb250IHtcbiAgICAgICAgZ2V0IHsgcmV0dXJuIHVuZGVybHlpbmdUaXRsZUZvbnQgfVxuICAgICAgICBzZXQodmFsdWUpIHsgdW5kZXJseWluZ1RpdGxlRm9udCA9IHZhbHVlIH1cbiAgICB9XG4gICAgdmFyIHVuZGVybHlpbmdUaXRsZUZvbnQ6IChVSUZvbnQpIVxuXG4gICAgdmFyIHRpdGxlQ29sb3I6IFVJQ29sb3Ige1xuICAgICAgICBnZXQgeyByZXR1cm4gdW5kZXJseWluZ1RpdGxlQ29sb3IgfVxuICAgICAgICBzZXQodmFsdWUpIHsgdW5kZXJseWluZ1RpdGxlQ29sb3IgPSB2YWx1ZSB9XG4gICAgfVxuICAgIHZhciB1bmRlcmx5aW5nVGl0bGVDb2xvcjogKFVJQ29sb3IpIVxuXG4gICAgdmFyIHN3aXRjaE9uOiBCb29sIHtcbiAgICAgICAgZ2V0IHsgcmV0dXJuIHVuZGVybHlpbmdTd2l0Y2hPbiB9XG4gICAgICAgIHNldCh2YWx1ZSkgeyB1bmRlcmx5aW5nU3dpdGNoT24gPSB2YWx1ZSB9XG4gICAgfVxuICAgIHZhciB1bmRlcmx5aW5nU3dpdGNoT246IChCb29sKSFcblxuICAgIHZhciBzd2l0Y2hDb2xvcjogVUlDb2xvciB7XG4gICAgICAgIGdldCB7IHJldHVybiB1bmRlcmx5aW5nU3dpdGNoQ29sb3IgfVxuICAgICAgICBzZXQodmFsdWUpIHsgdW5kZXJseWluZ1N3aXRjaENvbG9yID0gdmFsdWUgfVxuICAgIH1cbiAgICB2YXIgdW5kZXJseWluZ1N3aXRjaENvbG9yOiAoVUlDb2xvcikhXG5cbiAgICB2YXIgc3dpdGNoVW5rb3duOiBUIHtcbiAgICAgICAgZ2V0IHsgcmV0dXJuIHVuZGVybHlpbmdTd2l0Y2hVbmtvd24gfVxuICAgICAgICBzZXQodmFsdWUpIHsgdW5kZXJseWluZ1N3aXRjaFVua293biA9IHZhbHVlIH1cbiAgICB9XG4gICAgdmFyIHVuZGVybHlpbmdTd2l0Y2hVbmtvd246IChUKSFcblxuXG5cbiAgICBcL1wvTUFSSzogLSBzd2l0Y2hUeXBlPFQ+XG5cbiAgICBcL1wvXC86R2VuZXJpY3Mgbm90IHBlcmZlcmN0bHkgc3VwcG9ydGVkISBcbiAgICB2YXIgc3dpdGNoVHlwZUNhbGxzQ291bnQgPSAwXG4gICAgdmFyIHN3aXRjaFR5cGVDYWxsZWQ6IEJvb2wge1xuICAgICAgICByZXR1cm4gc3dpdGNoVHlwZUNhbGxzQ291bnQgPiAwXG4gICAgfVxuICAgIHZhciBzd2l0Y2hUeXBlUmV0dXJuVmFsdWU6ICBUISBcbiAgICB2YXIgc3dpdGNoVHlwZUNsb3N1cmU6ICgoKSAtPiAgVCApP1xuXG4gICAgZnVuYyBzd2l0Y2hUeXBlPFQ+KCkgLT4gVCB7XG4gICAgICAgIHN3aXRjaFR5cGVDYWxsc0NvdW50ICs9IDFcbiAgICAgICAgaWYgbGV0IHN3aXRjaFR5cGVDbG9zdXJlID0gc3dpdGNoVHlwZUNsb3N1cmUge1xuICAgICAgICAgICAgcmV0dXJuIHN3aXRjaFR5cGVDbG9zdXJlKCkgYXMhIFRcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIHJldHVybiBzd2l0Y2hUeXBlUmV0dXJuVmFsdWUgYXMhIFRcbiAgICAgICAgfVxuICAgIH1cblxuICAgIFwvXC9NQVJLOiAtIG9uU3dpdGNoVG9nZ2xlT25cblxuICAgIHZhciBvblN3aXRjaFRvZ2dsZU9uT25DYWxsc0NvdW50ID0gMFxuICAgIHZhciBvblN3aXRjaFRvZ2dsZU9uT25DYWxsZWQ6IEJvb2wge1xuICAgICAgICByZXR1cm4gb25Td2l0Y2hUb2dnbGVPbk9uQ2FsbHNDb3VudCA+IDBcbiAgICB9XG4gICAgdmFyIG9uU3dpdGNoVG9nZ2xlT25PblJlY2VpdmVkT246IEJvb2w\/XG4gICAgdmFyIG9uU3dpdGNoVG9nZ2xlT25PblJlY2VpdmVkSW52b2NhdGlvbnM6IFtCb29sXSA9IFtdXG4gICAgdmFyIG9uU3dpdGNoVG9nZ2xlT25PbkNsb3N1cmU6ICgoQm9vbCkgLT4gIFZvaWQgKT9cblxuICAgIGZ1bmMgb25Td2l0Y2hUb2dnbGVPbihvbjogQm9vbCkge1xuICAgICAgICBvblN3aXRjaFRvZ2dsZU9uT25DYWxsc0NvdW50ICs9IDFcbiAgICAgICAgb25Td2l0Y2hUb2dnbGVPbk9uUmVjZWl2ZWRPbiA9IG9uXG4gICAgICAgIG9uU3dpdGNoVG9nZ2xlT25PblJlY2VpdmVkSW52b2NhdGlvbnMuYXBwZW5kKG9uKVxuICAgICAgICBvblN3aXRjaFRvZ2dsZU9uT25DbG9zdXJlPyhvbilcbiAgICB9XG5cbiAgICBcL1wvTUFSSzogLSBvblN3aXRjaFxuXG4gICAgdmFyIG9uU3dpdGNoVGVzdENhbGxzQ291bnQgPSAwXG4gICAgdmFyIG9uU3dpdGNoVGVzdENhbGxlZDogQm9vbCB7XG4gICAgICAgIHJldHVybiBvblN3aXRjaFRlc3RDYWxsc0NvdW50ID4gMFxuICAgIH1cbiAgICB2YXIgb25Td2l0Y2hUZXN0Q2xvc3VyZTogKCgoKSAtPiAoKSkgLT4gIFZvaWQgKT9cblxuICAgIGZ1bmMgb25Td2l0Y2godGVzdDogKCkgLT4gKCkpIHtcbiAgICAgICAgb25Td2l0Y2hUZXN0Q2FsbHNDb3VudCArPSAxXG4gICAgICAgIG9uU3dpdGNoVGVzdENsb3N1cmU\/KHRlc3QpXG4gICAgfVxuXG59IiwidXJsIjoiIiwicmVnZW5lcmF0aW9uQ291bnRlciI6ODY5LCJzYW1wbGVDb2RlIjoicHJvdG9jb2wgU3dpdGNoV2l0aFRleHRDZWxsUHJvdG9jb2w6IEF1dG9Nb2NrYWJsZSB7XG4gICAgdmFyIHRpdGxlOiBTdHJpbmcgeyBnZXQgfVxuICAgIHZhciB0aXRsZUZvbnQ6IFVJRm9udCB7IGdldCB9XG4gICAgdmFyIHRpdGxlQ29sb3I6IFVJQ29sb3IgeyBnZXQgfVxuICAgIFxuICAgIHZhciBzd2l0Y2hPbjogQm9vbCB7IGdldCB9XG4gICAgdmFyIHN3aXRjaENvbG9yOiBVSUNvbG9yIHsgZ2V0IH1cbiAgICB2YXIgc3dpdGNoVW5rb3duOiBUIHsgZ2V0fVxuICAgIGZ1bmMgc3dpdGNoVHlwZTxUPiAtPiBUIFxuXG4gICAgZnVuYyBvblN3aXRjaFRvZ2dsZU9uKG9uOiBCb29sKVxuICAgIGZ1bmMgb25Td2l0Y2godGVzdDogKCgpIC0+ICgpKSlcbn1cblxucHVibGljIHByb3RvY29sIEF1dGhlbnRpY2F0aW9uU2VydmljZTogQXV0b01vY2thYmxlIHtcbiAgICBcbiAgICBcLyoqXG4gICAgICogU2lnbiBpbiB0aGUgdXNlciB3aXRoIGltcGxlbWVudGF0aW9uIHNwZWNpZmljIG9wdGlvbnMsIGUuZy4gY3JlZGVudGlhbHMuXG4gICAgICpcL1xuICAgIGZ1bmMgc2lnbkluKHdpdGhPcHRpb25zIG9wdGlvbnM6IFNpZ25Jbk9wdGlvbnM\/KSBhc3luYyB0aHJvd3NcbiAgICBcbiAgICBcLyoqXG4gICAgICogU2lnbiBvdXQgdGhlIHVzZXIsIGNsZWFyaW5nIHRoZSBjdXJyZWN0IHNlc3Npb24uXG4gICAgICpcL1xuICAgIGZ1bmMgc2lnbk91dCgpIGFzeW5jIHRocm93c1xuXG4gICAgXC8qKlxuICAgICAqIFJldHVybnMgdGhlIHVzZXJzIGN1cnJlbnQgYXV0aGVudGljYXRpb24gc3RhdHVzLlxuICAgICAqXC9cbiAgICB2YXIgaXNBdXRoZW50aWNhdGVkOiBBbnlQdWJsaXNoZXI8Qm9vbCwgTmV2ZXI+IHsgZ2V0IH1cbiAgICBcbiAgICBcLyoqXG4gICAgICogUmV0dXJucyB0aGUgdXNlcnMgY3VycmVudCBhdXRoZW50aWNhdGlvbiBzdGF0dXMuXG4gICAgICpcL1xuICAgIHZhciBsYXN0SXNBdXRoZW50aWNhdGVkVmFsdWU6IEJvb2wgeyBnZXQgfVxuICAgICAgICBcbiAgICBcLyoqXG4gICAgICogQ29udmVuaWVuY2UgZnVuY3Rpb24gZm9yIGNoZWNraW5nIGlmIHRoZSB1c2VyIGlzIGN1cnJlbnRseSBhdXRoZW50aWNhdGVkXG4gICAgICogYW5kIGNvbmRpdGlvbmFsbHkgcnVubmluZyB0aGUgc3VwcGxpZWQgY29kZSBibG9jay5cbiAgICAgKlwvXG4gICAgXC9cLyBzb3VyY2VyeTpvdmVycmlkZVJldHVybiA9IEFueVxuICAgIGZ1bmMgcnVuQXV0aGVudGljYXRlZDxUPihibG9jazogQGVzY2FwaW5nICgpIGFzeW5jIHRocm93cyAtPiBUIFwvXC8gc291cmNlcnk6b3ZlcnJpZGUgPSAoKSBhc3luYyB0aHJvd3MgLT4gQW55XG4gICAgXG4gICAgKSBhc3luYyB0aHJvd3MgLT4gVFxufVxuXG5wdWJsaWMgcHJvdG9jb2wgSHR0cENsaWVudDpBdXRvTW9ja2FibGUge1xuICAgIFxuICAgIHZhciBiYXNlVVJMOiBVUkw\/IHsgZ2V0IH1cbiAgICBcbiAgICB2YXIgZ2xvYmFsT3B0aW9uczogSHR0cENsaWVudE9wdGlvbnM\/IHsgZ2V0IH1cblxuICAgIFwvXC8gc291cmNlcnk6b3ZlcnJpZGVSZXR1cm4gPSBBbnlcbiAgICBmdW5jIHJlcXVlc3Q8VDogRGVjb2RhYmxlPihfIHR5cGU6IFQuVHlwZSwgXC9cLyBzb3VyY2VyeTpvdmVycmlkZSA9IEFueS5UeXBlXG4gICAgXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG1ldGhvZDogSHR0cE1ldGhvZCwgXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHBhdGg6IFN0cmluZywgXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHF1ZXJ5OiBbU3RyaW5nOiBBbnldPywgXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHBhcmFtZXRlcnM6IFtTdHJpbmc6IEFueV0\/LCBcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgb3B0aW9uczogSHR0cENsaWVudE9wdGlvbnM\/KSBhc3luYyB0aHJvd3MgLT4gVFxuICAgIFxuICAgIFwvXC8gc291cmNlcnk6b3ZlcnJpZGVSZXR1cm4gPSBBbnlcbiAgICBmdW5jIHJlcXVlc3Q8VDogRGVjb2RhYmxlLCBCb2R5OiBFbmNvZGFibGU+KF8gdHlwZTogVC5UeXBlLCBcL1wvIHNvdXJjZXJ5Om92ZXJyaWRlID0gQW55LlR5cGVcbiAgICBcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG1ldGhvZDogSHR0cE1ldGhvZCxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHBhdGg6IFN0cmluZywgXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBxdWVyeTogW1N0cmluZzogQW55XT8sXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBib2R5OiBCb2R5PywgXC9cLyBzb3VyY2VyeTpvdmVycmlkZSA9IEFueT9cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgb3B0aW9uczogSHR0cENsaWVudE9wdGlvbnM\/KSBhc3luYyB0aHJvd3MgLT4gVFxufSIsInJ1bkNvbmZpZ3VyYXRpb24iOiJzZWxlY3Rpb24iLCJpc0xvY2tlZCI6ZmFsc2UsImtpbmQiOiJzdGVuY2lsIiwidHJpbVdoaXRlc3BhY2VzIjp0cnVlLCJuYW1lIjoiTmV3IFRlbXBsYXRlIDEiLCJpbnNlcnRpb25Nb2RlIjoiZW5kT2ZGaWxlIn0="}